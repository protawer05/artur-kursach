{"ast":null,"code":"// Базовый URL вашего сервера\nconst API_BASE_URL = 'http://localhost:3001/api';\n\n// Функции для работы с товарами\nexport const productAPI = {\n  // Получить все товары\n  getProducts: async () => {\n    const response = await fetch(`${API_BASE_URL}/products`);\n    return await response.json();\n  },\n  // Получить товары по категории\n  getProductsByCategory: async category => {\n    const response = await fetch(`${API_BASE_URL}/products?category=${category}`);\n    return await response.json();\n  },\n  // Получить товар по ID\n  getProductById: async id => {\n    const response = await fetch(`${API_BASE_URL}/products/${id}`);\n    return await response.json();\n  }\n};\n\n// Функции для работы с пользователями\nexport const userAPI = {\n  // Авторизация по телефону\n  login: async phone => {\n    const response = await fetch(`${API_BASE_URL}/users/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        phone\n      })\n    });\n    return await response.json();\n  },\n  // Получить данные пользователя\n  getUser: async userId => {\n    const response = await fetch(`${API_BASE_URL}/users/${userId}`);\n    return await response.json();\n  },\n  // Обновить данные пользователя\n  updateUser: async (userId, userData) => {\n    const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    return await response.json();\n  }\n};\n\n// Функции для работы с заказами\nexport const orderAPI = {\n  // Создать заказ\n  createOrder: async orderData => {\n    const response = await fetch(`${API_BASE_URL}/orders`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderData)\n    });\n    return await response.json();\n  },\n  // Получить заказы пользователя\n  getUserOrders: async userId => {\n    const response = await fetch(`${API_BASE_URL}/orders/user/${userId}`);\n    return await response.json();\n  },\n  // Получить все заказы (для админа)\n  getAllOrders: async () => {\n    const response = await fetch(`${API_BASE_URL}/orders`);\n    return await response.json();\n  }\n};","map":{"version":3,"names":["API_BASE_URL","productAPI","getProducts","response","fetch","json","getProductsByCategory","category","getProductById","id","userAPI","login","phone","method","headers","body","JSON","stringify","getUser","userId","updateUser","userData","orderAPI","createOrder","orderData","getUserOrders","getAllOrders"],"sources":["/home/gasper/Рабочий стол/artur-food/frontend/src/services/api.js"],"sourcesContent":["// Базовый URL вашего сервера\nconst API_BASE_URL = 'http://localhost:3001/api'\n\n// Функции для работы с товарами\nexport const productAPI = {\n\t// Получить все товары\n\tgetProducts: async () => {\n\t\tconst response = await fetch(`${API_BASE_URL}/products`)\n\t\treturn await response.json()\n\t},\n\n\t// Получить товары по категории\n\tgetProductsByCategory: async category => {\n\t\tconst response = await fetch(\n\t\t\t`${API_BASE_URL}/products?category=${category}`\n\t\t)\n\t\treturn await response.json()\n\t},\n\n\t// Получить товар по ID\n\tgetProductById: async id => {\n\t\tconst response = await fetch(`${API_BASE_URL}/products/${id}`)\n\t\treturn await response.json()\n\t},\n}\n\n// Функции для работы с пользователями\nexport const userAPI = {\n\t// Авторизация по телефону\n\tlogin: async phone => {\n\t\tconst response = await fetch(`${API_BASE_URL}/users/login`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ phone }),\n\t\t})\n\t\treturn await response.json()\n\t},\n\n\t// Получить данные пользователя\n\tgetUser: async userId => {\n\t\tconst response = await fetch(`${API_BASE_URL}/users/${userId}`)\n\t\treturn await response.json()\n\t},\n\n\t// Обновить данные пользователя\n\tupdateUser: async (userId, userData) => {\n\t\tconst response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(userData),\n\t\t})\n\t\treturn await response.json()\n\t},\n}\n\n// Функции для работы с заказами\nexport const orderAPI = {\n\t// Создать заказ\n\tcreateOrder: async orderData => {\n\t\tconst response = await fetch(`${API_BASE_URL}/orders`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(orderData),\n\t\t})\n\t\treturn await response.json()\n\t},\n\n\t// Получить заказы пользователя\n\tgetUserOrders: async userId => {\n\t\tconst response = await fetch(`${API_BASE_URL}/orders/user/${userId}`)\n\t\treturn await response.json()\n\t},\n\n\t// Получить все заказы (для админа)\n\tgetAllOrders: async () => {\n\t\tconst response = await fetch(`${API_BASE_URL}/orders`)\n\t\treturn await response.json()\n\t},\n}\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,OAAO,MAAMC,UAAU,GAAG;EACzB;EACAC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,CAAC;IACxD,OAAO,MAAMG,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED;EACAC,qBAAqB,EAAE,MAAMC,QAAQ,IAAI;IACxC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAC3B,GAAGJ,YAAY,sBAAsBO,QAAQ,EAC9C,CAAC;IACD,OAAO,MAAMJ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED;EACAG,cAAc,EAAE,MAAMC,EAAE,IAAI;IAC3B,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,aAAaS,EAAE,EAAE,CAAC;IAC9D,OAAO,MAAMN,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7B;AACD,CAAC;;AAED;AACA,OAAO,MAAMK,OAAO,GAAG;EACtB;EACAC,KAAK,EAAE,MAAMC,KAAK,IAAI;IACrB,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,cAAc,EAAE;MAC3Da,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR,cAAc,EAAE;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL;MAAM,CAAC;IAC/B,CAAC,CAAC;IACF,OAAO,MAAMT,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED;EACAa,OAAO,EAAE,MAAMC,MAAM,IAAI;IACxB,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,UAAUmB,MAAM,EAAE,CAAC;IAC/D,OAAO,MAAMhB,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED;EACAe,UAAU,EAAE,MAAAA,CAAOD,MAAM,EAAEE,QAAQ,KAAK;IACvC,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,UAAUmB,MAAM,EAAE,EAAE;MAC/DN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACR,cAAc,EAAE;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACI,QAAQ;IAC9B,CAAC,CAAC;IACF,OAAO,MAAMlB,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7B;AACD,CAAC;;AAED;AACA,OAAO,MAAMiB,QAAQ,GAAG;EACvB;EACAC,WAAW,EAAE,MAAMC,SAAS,IAAI;IAC/B,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,SAAS,EAAE;MACtDa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR,cAAc,EAAE;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,SAAS;IAC/B,CAAC,CAAC;IACF,OAAO,MAAMrB,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED;EACAoB,aAAa,EAAE,MAAMN,MAAM,IAAI;IAC9B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,gBAAgBmB,MAAM,EAAE,CAAC;IACrE,OAAO,MAAMhB,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED;EACAqB,YAAY,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAMvB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,SAAS,CAAC;IACtD,OAAO,MAAMG,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7B;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}