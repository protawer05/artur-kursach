{"ast":null,"code":"var _jsxFileName = \"/home/gasper/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/artur-food/src/components/pages/cartPage/CartPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PickupModal from './PickupModal';\nimport DeliveryModal from './DeliveryModal';\nimport Notification from './Notification';\nimport orderStatusService from '../../services/orderStatusService';\nimport s from './cartPage.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartPage = ({\n  cartItems = [],\n  onUpdateQuantity,\n  onRemoveItem,\n  onClearCart,\n  currentUser\n}) => {\n  _s();\n  const [showPickupModal, setShowPickupModal] = useState(false);\n  const [showDeliveryModal, setShowDeliveryModal] = useState(false);\n  const [selectedPickupPoint, setSelectedPickupPoint] = useState(null);\n  const [notification, setNotification] = useState({\n    show: false,\n    message: '',\n    type: ''\n  });\n  const subtotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const total = subtotal;\n  const pickupPoints = [{\n    id: 1,\n    name: 'РЦ НЛО',\n    address: 'ул. Якуба Коляса, 37',\n    hours: 'Круглосуточно',\n    deliveryTime: 'Суши - 15 мин, WOK - 15 мин'\n  }\n  // ... остальные точки\n  ];\n  const showNotification = (message, type = 'success') => {\n    setNotification({\n      show: true,\n      message,\n      type\n    });\n    setTimeout(() => setNotification({\n      show: false,\n      message: '',\n      type: ''\n    }), 3000);\n  };\n  const handlePickupOrder = async pickupPoint => {\n    try {\n      if (!currentUser) {\n        showNotification('Для оформления заказа необходимо войти в аккаунт', 'error');\n        return;\n      }\n      const orderData = {\n        type: 'pickup',\n        items: cartItems,\n        pickupPoint,\n        total,\n        status: 'processing',\n        // Начальный статус\n        date: new Date().toISOString(),\n        userId: currentUser.id,\n        userPhone: currentUser.phone,\n        orderNumber: `ORD-${Date.now()}`\n      };\n      const response = await fetch('https://68d662abc2a1754b426a8851.mockapi.io/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(orderData)\n      });\n      if (response.ok) {\n        const newOrder = await response.json();\n\n        // Запускаем автоматическое обновление статуса\n        orderStatusService.startStatusProgression(newOrder.id);\n        showNotification('Заказ оформлен успешно! Ожидайте смс с подтверждением.', 'success');\n        onClearCart();\n      } else {\n        throw new Error('Ошибка при оформлении заказа');\n      }\n    } catch (error) {\n      showNotification('Ошибка при оформлении заказа. Попробуйте еще раз.', 'error');\n    }\n    setShowPickupModal(false);\n  };\n  const handleDeliveryOrder = async deliveryData => {\n    try {\n      if (!currentUser) {\n        showNotification('Для оформления заказа необходимо войти в аккаунт', 'error');\n        return;\n      }\n      const orderData = {\n        type: 'delivery',\n        items: cartItems,\n        deliveryData,\n        total,\n        status: 'processing',\n        // Начальный статус\n        date: new Date().toISOString(),\n        userId: currentUser.id,\n        userPhone: currentUser.phone,\n        orderNumber: `ORD-${Date.now()}`\n      };\n      const response = await fetch('https://68d662abc2a1754b426a8851.mockapi.io/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(orderData)\n      });\n      if (response.ok) {\n        const newOrder = await response.json();\n\n        // Запускаем автоматическое обновление статуса\n        orderStatusService.startStatusProgression(newOrder.id);\n        showNotification('Заказ оформлен успешно! Курьер свяжется с вами.', 'success');\n        onClearCart();\n      } else {\n        throw new Error('Ошибка при оформлении заказа');\n      }\n    } catch (error) {\n      showNotification('Ошибка при оформлении заказа. Попробуйте еще раз.', 'error');\n    }\n    setShowDeliveryModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.cartPage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.container,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: s.title,\n        children: \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 3\n  }, this);\n};\n_s(CartPage, \"aQxUGplulzE5JnhEKDxNObLQ0Ek=\");\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useState","Link","PickupModal","DeliveryModal","Notification","orderStatusService","s","jsxDEV","_jsxDEV","CartPage","cartItems","onUpdateQuantity","onRemoveItem","onClearCart","currentUser","_s","showPickupModal","setShowPickupModal","showDeliveryModal","setShowDeliveryModal","selectedPickupPoint","setSelectedPickupPoint","notification","setNotification","show","message","type","subtotal","reduce","sum","item","price","quantity","total","pickupPoints","id","name","address","hours","deliveryTime","showNotification","setTimeout","handlePickupOrder","pickupPoint","orderData","items","status","date","Date","toISOString","userId","userPhone","phone","orderNumber","now","response","fetch","method","headers","body","JSON","stringify","ok","newOrder","json","startStatusProgression","Error","error","handleDeliveryOrder","deliveryData","className","cartPage","children","container","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gasper/Рабочий стол/artur-food/src/components/pages/cartPage/CartPage.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport PickupModal from './PickupModal'\nimport DeliveryModal from './DeliveryModal'\nimport Notification from './Notification'\nimport orderStatusService from '../../services/orderStatusService'\nimport s from './cartPage.module.scss'\n\nconst CartPage = ({\n\tcartItems = [],\n\tonUpdateQuantity,\n\tonRemoveItem,\n\tonClearCart,\n\tcurrentUser,\n}) => {\n\tconst [showPickupModal, setShowPickupModal] = useState(false)\n\tconst [showDeliveryModal, setShowDeliveryModal] = useState(false)\n\tconst [selectedPickupPoint, setSelectedPickupPoint] = useState(null)\n\tconst [notification, setNotification] = useState({\n\t\tshow: false,\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\n\tconst subtotal = cartItems.reduce(\n\t\t(sum, item) => sum + item.price * item.quantity,\n\t\t0\n\t)\n\tconst total = subtotal\n\n\tconst pickupPoints = [\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'РЦ НЛО',\n\t\t\taddress: 'ул. Якуба Коляса, 37',\n\t\t\thours: 'Круглосуточно',\n\t\t\tdeliveryTime: 'Суши - 15 мин, WOK - 15 мин',\n\t\t},\n\t\t// ... остальные точки\n\t]\n\n\tconst showNotification = (message, type = 'success') => {\n\t\tsetNotification({ show: true, message, type })\n\t\tsetTimeout(\n\t\t\t() => setNotification({ show: false, message: '', type: '' }),\n\t\t\t3000\n\t\t)\n\t}\n\n\tconst handlePickupOrder = async pickupPoint => {\n\t\ttry {\n\t\t\tif (!currentUser) {\n\t\t\t\tshowNotification(\n\t\t\t\t\t'Для оформления заказа необходимо войти в аккаунт',\n\t\t\t\t\t'error'\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst orderData = {\n\t\t\t\ttype: 'pickup',\n\t\t\t\titems: cartItems,\n\t\t\t\tpickupPoint,\n\t\t\t\ttotal,\n\t\t\t\tstatus: 'processing', // Начальный статус\n\t\t\t\tdate: new Date().toISOString(),\n\t\t\t\tuserId: currentUser.id,\n\t\t\t\tuserPhone: currentUser.phone,\n\t\t\t\torderNumber: `ORD-${Date.now()}`,\n\t\t\t}\n\n\t\t\tconst response = await fetch(\n\t\t\t\t'https://68d662abc2a1754b426a8851.mockapi.io/orders',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(orderData),\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst newOrder = await response.json()\n\n\t\t\t\t// Запускаем автоматическое обновление статуса\n\t\t\t\torderStatusService.startStatusProgression(newOrder.id)\n\n\t\t\t\tshowNotification(\n\t\t\t\t\t'Заказ оформлен успешно! Ожидайте смс с подтверждением.',\n\t\t\t\t\t'success'\n\t\t\t\t)\n\t\t\t\tonClearCart()\n\t\t\t} else {\n\t\t\t\tthrow new Error('Ошибка при оформлении заказа')\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tshowNotification(\n\t\t\t\t'Ошибка при оформлении заказа. Попробуйте еще раз.',\n\t\t\t\t'error'\n\t\t\t)\n\t\t}\n\n\t\tsetShowPickupModal(false)\n\t}\n\n\tconst handleDeliveryOrder = async deliveryData => {\n\t\ttry {\n\t\t\tif (!currentUser) {\n\t\t\t\tshowNotification(\n\t\t\t\t\t'Для оформления заказа необходимо войти в аккаунт',\n\t\t\t\t\t'error'\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst orderData = {\n\t\t\t\ttype: 'delivery',\n\t\t\t\titems: cartItems,\n\t\t\t\tdeliveryData,\n\t\t\t\ttotal,\n\t\t\t\tstatus: 'processing', // Начальный статус\n\t\t\t\tdate: new Date().toISOString(),\n\t\t\t\tuserId: currentUser.id,\n\t\t\t\tuserPhone: currentUser.phone,\n\t\t\t\torderNumber: `ORD-${Date.now()}`,\n\t\t\t}\n\n\t\t\tconst response = await fetch(\n\t\t\t\t'https://68d662abc2a1754b426a8851.mockapi.io/orders',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(orderData),\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst newOrder = await response.json()\n\n\t\t\t\t// Запускаем автоматическое обновление статуса\n\t\t\t\torderStatusService.startStatusProgression(newOrder.id)\n\n\t\t\t\tshowNotification(\n\t\t\t\t\t'Заказ оформлен успешно! Курьер свяжется с вами.',\n\t\t\t\t\t'success'\n\t\t\t\t)\n\t\t\t\tonClearCart()\n\t\t\t} else {\n\t\t\t\tthrow new Error('Ошибка при оформлении заказа')\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tshowNotification(\n\t\t\t\t'Ошибка при оформлении заказа. Попробуйте еще раз.',\n\t\t\t\t'error'\n\t\t\t)\n\t\t}\n\n\t\tsetShowDeliveryModal(false)\n\t}\n\n\treturn (\n\t\t<div className={s.cartPage}>\n\t\t\t<div className={s.container}>\n\t\t\t\t<h1 className={s.title}>Корзина</h1>\n\n\t\t\t\t{/* ... остальной код корзины без изменений ... */}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CartPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}